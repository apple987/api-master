<?xml version="1.0" encoding="UTF-8"?>    
<beans xmlns="http://www.springframework.org/schema/beans"    
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"    
    xmlns:context="http://www.springframework.org/schema/context"    
    xmlns:mvc="http://www.springframework.org/schema/mvc"   
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans      
                        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd      
                        http://www.springframework.org/schema/context      
                        http://www.springframework.org/schema/context/spring-context-4.3.xsd      
                        http://www.springframework.org/schema/mvc      
                        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
                        http://www.springframework.org/schema/aop   
                        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
                        ">  
    <!-- 扫描控制器类 -->
	<context:component-scan base-package="com.king.web.controller" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
    <!-- 允许对静态资源文件的访问 --> 
	<mvc:default-servlet-handler/>
	
	<!-- 静态资源映射 -->
    <mvc:resources location="classpath:/META-INF/resources/" mapping="swagger-ui.html"/>  
    <mvc:resources location="classpath:/META-INF/resources/webjars/" mapping="/webjars/**"/> 
    <!-- 添加注解驱动 -->  
    <!-- mvc注解驱动FastJson注入 -->
    <!-- 配置springMVC数据格式处理 -->  
    <mvc:annotation-driven>
	  <mvc:message-converters>
	    <!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
		<bean class="org.springframework.http.converter.StringHttpMessageConverter">
			<property name="defaultCharset" value="UTF-8" />
		</bean>
		<!-- 下载使用 -->
        <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
        <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
        <bean class="org.springframework.http.converter.ResourceRegionHttpMessageConverter"/>
        <!-- XML处理 -->
	    <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
	    <bean class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" />
	    <bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />
        <!-- json采用fastjson处理 -->
		<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4">
		    <property name="supportedMediaTypes">
                    <list>  
                        <!-- 前后顺序倒置，会导致返回前台的JSON是个字符串，而不是Object -->  
			            <value>application/json;charset=UTF-8</value>
			            <value>text/html;charset=UTF-8</value>    
			        </list>    
            </property>
			<property name="fastJsonConfig">
				<bean class="com.alibaba.fastjson.support.config.FastJsonConfig">
					<property name="serializerFeatures">
						<array value-type="com.alibaba.fastjson.serializer.SerializerFeature">
							<!-- 避免循环引用 -->
							<value>DisableCircularReferenceDetect</value>
							<!-- 是否输出值为null的字段 -->
							<value>WriteMapNullValue</value>
							<!-- 数值字段如果为null,输出为0,而非null -->
							<value>WriteNullNumberAsZero</value>
							<!-- 字符类型字段如果为null,输出为"",而非null -->
							<value>WriteNullStringAsEmpty</value>
							<!-- List字段如果为null,输出为[],而非null -->
							<value>WriteNullListAsEmpty</value>
							<!-- Boolean字段如果为null,输出为false,而非null -->
							<value>WriteNullBooleanAsFalse</value>
							<!-- 输出key显示双引号 -->
							<value>QuoteFieldNames</value>
							<!-- 日期格式化显示,默认格式化日期为yyyy-MM-dd HH:mm:ss -->
							<!-- <value>WriteDateUseDateFormat</value> -->
						</array>
					</property>
					<!-- 日期格式化结果 -->
					<property name="dateFormat" value="yyyy-MM-dd HH:mm:ss"></property>
				</bean>
			</property>
		</bean>
	  </mvc:message-converters>
	</mvc:annotation-driven>
             
    <!-- XML转码器 -->
	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />
	
    <!-- FreeMarker环境配置 -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="configLocation" value="classpath:freemarker.properties" />
		<property name="templateLoaderPath" value="/WEB-INF/view/" />
		<property name="freemarkerVariables">
			<map>
			    <entry key="xml_escape" value-ref="fmXmlEscape" />
			</map>
		</property>
	</bean>
	<!-- freeMarker视图解析 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="viewResolvers">
			<list>
				<bean
					class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
					<property name="viewClass"
						value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
					<property name="contentType" value="text/html; charset=utf-8" />
					<property name="suffix" value=".ftl" />
					<property name="order" value="0" />
					<property name="exposeRequestAttributes" value="true" />
					<property name="exposeSessionAttributes" value="true" />
					<property name="exposeSpringMacroHelpers" value="true" />
					<property name="requestContextAttribute" value="request"/>
				</bean>
				<bean  class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
			        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
			        <property name="prefix" value="/WEB-INF/view/" />  
			        <property name="suffix" value=".jsp" /> 
			        <property name="order" value="1" /> 
			    </bean>
			</list>
		</property>
	</bean>    
        
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->    
    <bean id="multipartResolver"   class="org.springframework.web.multipart.commons.CommonsMultipartResolver">      
        <!-- 默认编码 -->    
        <property name="defaultEncoding" value="utf-8" />      
        <!-- 文件大小最大值100MB -->    
        <property name="maxUploadSize" value="100000000" />      
        <!-- 内存中的最大值 -->    
        <property name="maxInMemorySize" value="40960" />      
    </bean>     

    <!-- controller日志打印,aspectj aop启用CGliB代理  -->
    <aop:aspectj-autoproxy expose-proxy="true" proxy-target-class="true"/>
    
</beans>   