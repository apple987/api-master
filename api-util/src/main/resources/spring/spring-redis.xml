<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:redisson="http://redisson.org/schema/redisson"  
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.3.xsd
            http://www.springframework.org/schema/cache   
     		http://www.springframework.org/schema/cache/spring-cache-4.3.xsd
     		http://redisson.org/schema/redisson
            http://redisson.org/schema/redisson/redisson.xsd">
    <!-- 启动注解 -->
    <cache:annotation-driven cache-manager="cacheManager" />
    <context:component-scan base-package="com.king.common.util" />   
    <!-- 配置redis -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxActive" value="${redis.maxActive}" />
		<property name="maxWait" value="${redis.maxWait}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>

	<bean id="connectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.password}"
		p:pool-config-ref="poolConfig" />

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
      	<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
		<property name="hashKeySerializer">  
    		<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>  
		</property>    
		<property name="hashValueSerializer">  
		    <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>  
		</property>
		<property name="stringSerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>  
	</bean>
	<!-- 配置缓存工具 -->
    <bean id="cacheUtil" class="com.king.common.util.CacheUtil"> 
         <property name="redisTemplate" ref="redisTemplate"></property>
    </bean>
    
    <!-- 缓存管理器,自定义缓存-->  
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">  
        <property name="caches">  
            <set>  
                 <bean class="com.king.common.util.RedisCache">  
                    <property name="redisTemplate" ref="redisTemplate" /> 
                    <property name="name" value="default" />  
                    <property name="timeout" value="${redis.timeout}" /> 
                 </bean>  
                 <bean class="com.king.common.util.RedisCache">  
                    <property name="redisTemplate" ref="redisTemplate" />  
                    <property name="name" value="view" /> 
                    <property name="timeout" value="${redis.timeout}" /> 
                </bean> 
            </set>  
        </property>  
    </bean> 
    <!-- 自定义生成序列号 -->
     <bean id="serialNo" class="com.king.common.util.SerialNo"> 
         <property name="redisTemplate" ref="redisTemplate"></property>
    </bean> 
    
    <!-- 配置redisson实例 -->
	<redisson:client id="redisson">
	   <!-- 单机redisson版本 -->
       <redisson:single-server address="redis://127.0.0.1:6386" password="qdone"/>
       <!-- 集群redisson版本 ,scan-interval:集群状态扫描间隔时间，单位是毫-->
      <!--  <redisson:cluster-servers scan-interval="10000" password="HualePay123">
            <redisson:node-address value="redis://172.17.0.11:7000"></redisson:node-address>  
            <redisson:node-address value="redis://172.17.0.11:7001"></redisson:node-address>  
            <redisson:node-address value="redis://172.17.0.11:7002"></redisson:node-address>  
        </redisson:cluster-servers> -->
       
       <!-- <redisson:cluster-servers scan-interval="10000" password="qdone">
            <redisson:node-address value="redis://10.21.17.107:6379"></redisson:node-address>  
            <redisson:node-address value="redis://10.21.17.107:6380"></redisson:node-address>  
            <redisson:node-address value="redis://10.21.17.107:6381"></redisson:node-address>  
            <redisson:node-address value="redis://10.21.17.107:6382"></redisson:node-address>  
            <redisson:node-address value="redis://10.21.17.107:6383"></redisson:node-address>  
            <redisson:node-address value="redis://10.21.17.107:6384"></redisson:node-address>  
        </redisson:cluster-servers> -->
    </redisson:client>
</beans>